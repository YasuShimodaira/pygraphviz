name: windows-cmd

on:
    workflow_dispatch:

env:
  WIN_GRAPHVIZ_URL: "https://gitlab.com/graphviz/graphviz/-/package_files/6164164/download"
  WIN_GRAPHVIZ_EXE: "C:\\Temp\\graphviz-install-2.46.0-win64.exe"
  WIN_GRAPHVIZ_DIR: "C:\\Program Files\\Graphviz"

jobs:

  windows:

    runs-on: windows-latest

    strategy:
      matrix:
        python-version: ["3.11"]
#        python-version: ["3.9", "3.10", "3.11"]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # This and the following step need to be changed when Graphviz has new releases.
    - name: Download graphviz source
      run: Invoke-WebRequest -Uri $env:WIN_GRAPHVIZ_URL -OutFile $env:WIN_GRAPHVIZ_EXE

    - name: Install exe
      run: Start-Process -Wait -FilePath $env:WIN_GRAPHVIZ_EXE -ArgumentList '/S' -PassThru

    - name: Update path
      run: echo "$($env:WIN_GRAPHVIZ_DIR)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # We need ``python -m pip install -U pip`` b/c Windows won't modify running programs.
    - name: Install packages
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements/test.txt
        python -m pip install --use-pep517 ^
          --config-setting="--global-option=build_ext" ^
          --config-setting="--global-option=-I$($env:WIN_GRAPHVIZ_DIR)\include" ^
          --config-setting="--global-option=-L$($env:WIN_GRAPHVIZ_DIR)\lib" ^
          .
        python -m pip list

    # We are leaving this in to help us remember some useful PowerShell syntax.
    # The following commands are also helpful for debugging:  Copy-Item, Get-Content
    - name: List
      run: Get-ChildItem "$($env:WIN_GRAPHVIZ_DIR)\bin"

    # Set PY_IGNORE_IMPORTMISMATCH b/c otherwise --doctest-modules is confused.
    - name: Test pygraphviz
      run: |
        [Environment]::SetEnvironmentVariable("PY_IGNORE_IMPORTMISMATCH", 1)
        pytest --doctest-modules --durations=10 --pyargs pygraphviz

  windows-cmd:

    runs-on: windows-latest

    strategy:
      matrix:
        python-version: ["3.11"]
#        python-version: ["3.9", "3.10", "3.11"]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # This and the following step need to be changed when Graphviz has new releases.
    - name: Download graphviz source
      run: Invoke-WebRequest -Uri $env:WIN_GRAPHVIZ_URL -OutFile $env:WIN_GRAPHVIZ_EXE

    - name: Install exe
      run: Start-Process -Wait -FilePath $env:WIN_GRAPHVIZ_EXE -ArgumentList '/S' -PassThru

    - name: Update path
      run: echo "$($env:WIN_GRAPHVIZ_DIR)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # We need ``python -m pip install -U pip`` b/c Windows won't modify running programs.
    - name: Install packages
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements/test.txt
        python -m pip install --global-option=build_ext ^
          --global-option="-I$($env:WIN_GRAPHVIZ_DIR)\include" ^
          --global-option="-L$($env:WIN_GRAPHVIZ_DIR)\lib" ^
          .
        python -m pip list

    # We are leaving this in to help us remember some useful PowerShell syntax.
    # The following commands are also helpful for debugging:  Copy-Item, Get-Content
    - name: List
      run: Get-ChildItem "$($env:WIN_GRAPHVIZ_DIR)\bin"

    # Set PY_IGNORE_IMPORTMISMATCH b/c otherwise --doctest-modules is confused.
    - name: Test pygraphviz
      run: |
        [Environment]::SetEnvironmentVariable("PY_IGNORE_IMPORTMISMATCH", 1)
        pytest --doctest-modules --durations=10 --pyargs pygraphviz

  windows-powershell:

    runs-on: windows-latest

    strategy:
      matrix:
        python-version: ["3.11"]
#        python-version: ["3.9", "3.10", "3.11"]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # This and the following step need to be changed when Graphviz has new releases.
    - name: Download graphviz source
      run: Invoke-WebRequest -Uri $env:WIN_GRAPHVIZ_URL -OutFile $env:WIN_GRAPHVIZ_EXE

    - name: Install exe
      run: Start-Process -Wait -FilePath $env:WIN_GRAPHVIZ_EXE -ArgumentList '/S' -PassThru

    - name: Update path
      run: echo "$($env:WIN_GRAPHVIZ_DIR)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # We need ``python -m pip install -U pip`` b/c Windows won't modify running programs.
    - name: Install packages
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements/test.txt
        python -m pip install --use-pep517 `
          --global-option=build_ext `
          --global-option="-I$($env:WIN_GRAPHVIZ_DIR)\include" `
          --global-option="-L$($env:WIN_GRAPHVIZ_DIR)\lib" `
          .
        python -m pip list

    # We are leaving this in to help us remember some useful PowerShell syntax.
    # The following commands are also helpful for debugging:  Copy-Item, Get-Content
    - name: List
      run: Get-ChildItem "$($env:WIN_GRAPHVIZ_DIR)\bin"

    # Set PY_IGNORE_IMPORTMISMATCH b/c otherwise --doctest-modules is confused.
    - name: Test pygraphviz
      run: |
        [Environment]::SetEnvironmentVariable("PY_IGNORE_IMPORTMISMATCH", 1)
        pytest --doctest-modules --durations=10 --pyargs pygraphviz


  windows-cmd-perfect:

    runs-on: windows-latest

    strategy:
      matrix:
        python-version: ["3.11"]
#        python-version: ["3.9", "3.10", "3.11"]

    steps:

    - name: Checkout pygraphviz
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # This and the following step need to be changed when Graphviz has new releases.
    - name: Download graphviz source
      run: Invoke-WebRequest -Uri $env:WIN_GRAPHVIZ_URL -OutFile $env:WIN_GRAPHVIZ_EXE

    - name: Install exe
      run: Start-Process -Wait -FilePath $env:WIN_GRAPHVIZ_EXE -ArgumentList '/S' -PassThru

    - name: Update path
      run: echo "$($env:WIN_GRAPHVIZ_DIR)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # We need ``python -m pip install -U pip`` b/c Windows won't modify running programs.
    - name: Install packages
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements/test.txt
        python -m pip install --use-pep517 ^
          --config-setting="--global-option=build_ext" ^
          --config-setting="--global-option=-I$($env:WIN_GRAPHVIZ_DIR)\include" ^
          --config-setting="--global-option=-L$($env:WIN_GRAPHVIZ_DIR)\lib" ^
          .
        python -m pip list
      shell: cmd

    # We are leaving this in to help us remember some useful PowerShell syntax.
    # The following commands are also helpful for debugging:  Copy-Item, Get-Content
    - name: List
      run: Get-ChildItem "$($env:WIN_GRAPHVIZ_DIR)\bin"

    # Set PY_IGNORE_IMPORTMISMATCH b/c otherwise --doctest-modules is confused.
    - name: Test pygraphviz
      run: |
        [Environment]::SetEnvironmentVariable("PY_IGNORE_IMPORTMISMATCH", 1)
        pytest --doctest-modules --durations=10 --pyargs pygraphviz
